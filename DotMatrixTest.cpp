#include "DotMatrixTest.h"

#include "Driver_Dual595.h"
#include "DotMatrix.h"
#include "DotFont.h"
#include "DotString.h"
#include "DotPattern.h"
#include "Font0703.h"

Driver_Dual595 dmd(9, 8, 7, 6, 5);
DotMatrix dm = dmd.getDotMatrix();
DotPattern dp(dm);

const uint8_t PROGMEM BLOCK[] =
{ 0x00, 0x3c, 0x00, 0x00, // I	-
		0x08, 0x08, 0x08, 0x08, 0x00, 0x3c, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08,

		0x00, 0x10, 0x10, 0x30, // J	-
		0x00, 0x00, 0x38, 0x08, 0x00, 0x18, 0x10, 0x10, 0x00, 0x20, 0x38, 0x00,

		0x00, 0x30, 0x10, 0x10, // L	-
		0x00, 0x00, 0x38, 0x20, 0x00, 0x10, 0x10, 0x18, 0x00, 0x08, 0x38, 0x00,

		0x00, 0x30, 0x30, 0x00, // O	-
		0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00,

		0x00, 0x10, 0x30, 0x10, // T	-
		0x00, 0x00, 0x38, 0x10, 0x00, 0x10, 0x18, 0x10, 0x00, 0x10, 0x38, 0x00,

		0x00, 0x10, 0x30, 0x20, // Z	-
		0x00, 0x00, 0x30, 0x18, 0x00, 0x10, 0x30, 0x20, 0x00, 0x00, 0x30, 0x18,

		0x00, 0x20, 0x30, 0x10, // S	-
		0x00, 0x00, 0x18, 0x30, 0x00, 0x20, 0x30, 0x10, 0x00, 0x00, 0x18, 0x30,

};

void putBlock(byte type, byte index, byte x, byte y)
{
	byte c[4];
	memcpy_P(c, BLOCK + type * 4 * 4 + index * 4, 4);
	dp.setPattern(c, 4, 1);
	dp.postAt(x, y);
}

void setup()
{
	dm.clear(0x00);
//	DotFont df(dm);
//	df.setPattern(FONT_0703, FONT_0703_STATE);
//	DotString ds(df, 16, true);
//	ds.printf("aGuegu.net");
//	dm.setRect(0, 0, 47, 11);
//	dm.setRect(1, 1, 46, 10, false);

//	dm.setLine(0, 0, 47, 0);
//	dm.setLine(0, 11, 47, 11);
//	dm.setLine(40, 1, 40, 11);

//	for (byte i = 0; i < 20; i++)
//	{
//		putBlock(random(7), random(4), random(48), random(12));
//	}

	for (byte i = 0; i < dm.countBytes(); i++)
		dm.setByte(i, i);
}

void loop()
{
	dmd.display();
}

